/*-------------------------------------------------------------------------
 *
 * PSQLException.java
 *     This class extends SQLException, and provides our internationalisation
 *     handling
 *
 * Copyright (c) 2003, PostgreSQL Global Development Group
 *
 * IDENTIFICATION
 *	  $PostgreSQL: pgjdbc/org/postgresql/util/PSQLException.java.in,v 1.4 2004/09/20 08:36:51 jurka Exp $
 *
 *-------------------------------------------------------------------------
 */
package org.postgresql.util;

import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.io.IOException;
import java.sql.SQLException;
import org.postgresql.Driver;

public class PSQLException extends SQLException
{

	public PSQLException(String msg, PSQLState state, Throwable cause, Object[] argv)
	{
		super(translate(msg, cause, argv), state == null ? null : state.getState());                
		initCause(cause); // Calls either the 1.4 Throwable impl or our impl below.
		if (Driver.logDebug)
			Driver.debug("Exception: " + this);
		
	}

	public PSQLException(String msg)
	{
		this(msg, (PSQLState)null, (Throwable)null, (Object[])null);
	}
	
	public PSQLException(String msg, PSQLState state)
	{
		this(msg, state, (Throwable)null, (Object[])null);
	}
	
	public PSQLException(String msg, PSQLState state, Throwable cause)
	{
		this(msg, state, cause, (Object[])null);
	}
	
	public PSQLException(String msg, PSQLState state, Object arg1)
	{
		this(msg, state, null, new Object[] { arg1 });
	}

	public PSQLException(String msg, PSQLState state, Object arg1, Throwable cause)
	{
		this(msg, state, cause, new Object[] { arg1 });
	}
	
	private static String translate(String msg, Throwable cause, Object[] args) {
		String translated = MessageTranslator.translate(msg, args);
@NOINITCAUSE@		if (cause != null) {
@NOINITCAUSE@			try {
@NOINITCAUSE@				ByteArrayOutputStream baos = new ByteArrayOutputStream();
@NOINITCAUSE@				PrintWriter pw = new PrintWriter(baos);
@NOINITCAUSE@				pw.println();
@NOINITCAUSE@				pw.println(MessageTranslator.translate("postgresql.error.exception", cause.toString()));
@NOINITCAUSE@				pw.println(MessageTranslator.translate("postgresql.error.stacktrace"));
@NOINITCAUSE@				cause.printStackTrace(pw);
@NOINITCAUSE@				pw.println(MessageTranslator.translate("postgresql.error.stacktraceend"));
@NOINITCAUSE@				pw.flush();
@NOINITCAUSE@				translated = translated + baos.toString();
@NOINITCAUSE@				pw.close();
@NOINITCAUSE@				baos.close();
@NOINITCAUSE@			} catch (IOException ioe) {
@NOINITCAUSE@				translated = translated + MessageTranslator.translate("postgresql.error.stacktraceerror", new Object[] { cause.toString(), ioe.toString() });
@NOINITCAUSE@			}
@NOINITCAUSE@		}
		return translated;
	}
	
@NOINITCAUSE@	// Dummy initCause() for pre-1.4 JVMs
@NOINITCAUSE@	public void initCause(Throwable cause) {}


}
